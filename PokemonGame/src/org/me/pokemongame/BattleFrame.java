/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package org.me.pokemongame;

import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Toolkit;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static org.me.pokemongame.PlayerFrame.Cardcombobox1;
import static org.me.pokemongame.PlayerFrame.Cardcombobox2;
import static org.me.pokemongame.PlayerFrame.Cardcombobox3;
import static org.me.pokemongame.PlayerFrame.Cardcombobox4;
import static org.me.pokemongame.PlayerFrame.Cardcombobox5;
import static org.me.pokemongame.PlayerFrame.Cardcombobox6;
import static org.me.pokemongame.PlayerFrame.Pokemoncombobox1;
import static org.me.pokemongame.PlayerFrame.caughtPokemon1;
import static org.me.pokemongame.PlayerFrame.numberOfPlayers;
import static org.me.pokemongame.PlayerFrame.objectCard1;
import static org.me.pokemongame.PlayerFrame.objectCard2;
import static org.me.pokemongame.PlayerFrame.objectCard3;
import static org.me.pokemongame.PlayerFrame.objectCard4;
import static org.me.pokemongame.PlayerFrame.objectCard5;
import static org.me.pokemongame.PlayerFrame.objectCard6;
import static org.me.pokemongame.PokemonTapaFrame.p;

/**
 *
 * @author nikos
 */
public class BattleFrame extends javax.swing.JFrame{
public static int playerNumber;
private int m=0;//metritis gia arithmo bonus
private int a=0;//athroistis bonus
public static int t=0;//total
private int m2=0;//metritis gia arithmo bonus
private int a2=0;//athroistis bonus
public static int t2=0;//total
    public static  int battleWithPlayer;
    /**
     * Creates new form BattleFrame
     */
    public BattleFrame(int aplayerNumber,int abattleWithPlayer) {
        this.playerNumber=aplayerNumber;
        this.battleWithPlayer=abattleWithPlayer;
        initComponents();
        myinitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        pokemonComboBox1 = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        bonusComboBox1 = new javax.swing.JComboBox();
        chooseButton1 = new javax.swing.JButton();
        useBonusButton1 = new javax.swing.JButton();
        rollLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        bonusLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        totalLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        attackLabel1 = new javax.swing.JLabel();
        iconLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        pokemonComboBox2 = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        bonusComboBox2 = new javax.swing.JComboBox();
        chooseButton2 = new javax.swing.JButton();
        useBonusButton2 = new javax.swing.JButton();
        rollLabel2 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        bonusLabel2 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        totalLabel2 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        attackLabel2 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        masterLabel = new javax.swing.JLabel();
        rollmaster = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        iconLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Battle");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel4.setOpaque(false);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Pokemon");

        pokemonComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Bonus");

        bonusComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        chooseButton1.setText("I Choose You!");
        chooseButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseButton1ActionPerformed(evt);
            }
        });

        useBonusButton1.setText("Use Bonus!");
        useBonusButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useBonusButton1ActionPerformed(evt);
            }
        });

        rollLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rollLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rollLabel1.setText("0");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Roll");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("+");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Bonus");

        bonusLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bonusLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bonusLabel1.setText("0");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("=");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Total");

        totalLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalLabel1.setText("0");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("+");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Attack");

        attackLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        attackLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attackLabel1.setText("0");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(pokemonComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(bonusComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chooseButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(useBonusButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(rollLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bonusLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(attackLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(totalLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(59, 59, 59))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pokemonComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bonusComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chooseButton1)
                    .addComponent(useBonusButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 499, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rollLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bonusLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(attackLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(5, 5, 5)))))
                .addGap(24, 24, 24))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jPanel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(iconLabel1, gridBagConstraints);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 493, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setOpaque(false);

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Pokemon");

        pokemonComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Bonus");

        bonusComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        chooseButton2.setText("I Choose You!");
        chooseButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseButton2ActionPerformed(evt);
            }
        });

        useBonusButton2.setText("Use Bonus!");
        useBonusButton2.setToolTipText("");
        useBonusButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useBonusButton2ActionPerformed(evt);
            }
        });

        rollLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rollLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rollLabel2.setText("0");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Roll");

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("+");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Bonus");

        bonusLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        bonusLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bonusLabel2.setText("0");

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("=");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Total");

        totalLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalLabel2.setText("0");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("+");

        attackLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        attackLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attackLabel2.setText("0");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Attack");

        jButton1.setText("End Battle");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        masterLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        rollmaster.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/me/pokemongame/dice.svg.png"))); // NOI18N
        rollmaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rollmasterActionPerformed(evt);
            }
        });

        jLabel2.setText("Roll for Master");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(pokemonComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(bonusComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(chooseButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(useBonusButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(masterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(rollmaster, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(rollLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(bonusLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel28)
                .addGap(8, 8, 8)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(attackLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(2, 2, 2)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(totalLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pokemonComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bonusComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseButton2)
                            .addComponent(useBonusButton2))
                        .addGap(3, 3, 3)
                        .addComponent(masterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addComponent(rollmaster, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 475, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rollLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bonusLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton1))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addComponent(attackLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(iconLabel2, gridBagConstraints);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseButton1ActionPerformed
      ImageIcon  icon = new javax.swing.ImageIcon(getClass().getResource("/org/me/pokemongame/pokemon-tapes/"+pokemonComboBox1.getSelectedItem()+".png"));
        
        iconLabel1.setIcon(icon); 
        for(int i=0; i<PlayerFrame.caughtPokemon.size(); i++){
            if(pokemonComboBox1.getSelectedItem()==PlayerFrame.caughtPokemon.get(i).getName()){
               attackLabel1.setText(Integer.toString(PlayerFrame.caughtPokemon.get(i).getAttack()));
               t+=PlayerFrame.caughtPokemon.get(i).getAttack();
               totalLabel1.setText(Integer.toString(t));
               chooseButton1.setEnabled(false);
            }
                
        }
        

// TODO add your handling code here:
    }//GEN-LAST:event_chooseButton1ActionPerformed
public static void setRollLabel(String zaria){
    rollLabel1.setText(zaria);
    t+=Integer.parseInt(zaria);
    totalLabel1.setText(Integer.toString(t));
    
    
}
public static void setRollLabel2(String zaria){
    rollLabel2.setText(zaria);
    t2+=Integer.parseInt(zaria);
    totalLabel2.setText(Integer.toString(t2));
    
    
}
    private void useBonusButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useBonusButton1ActionPerformed
m++;
       if(m<=2){
       String s=(String) bonusComboBox1.getSelectedItem();
        bonusComboBox1.removeItem(s);
       
        int i=0;
        switch(playerNumber){
            case 1: 
                
                for(i=0; i<PlayerFrame.objectCard1.size(); i++ ){

                    
                if(PlayerFrame.objectCard1.get(i).getName()==s)
                {
                                                         a+=PlayerFrame.objectCard1.get(i).getAttackBonus();
                                         t+=PlayerFrame.objectCard1.get(i).getAttackBonus();

                     PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.remove(i));
                     PlayerFrame.Cardcombobox1.removeItem(s);
                     break;
                }
            
                       
                   
            }

                
                break;
            case 2:   
                for(i=0; i<PlayerFrame.objectCard2.size(); i++ ){

                    
                if(PlayerFrame.objectCard2.get(i).getName()==s)
                {
                                         a+=PlayerFrame.objectCard2.get(i).getAttackBonus();
                                         t+=PlayerFrame.objectCard2.get(i).getAttackBonus();

                     PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.remove(i));
                     PlayerFrame.Cardcombobox2.removeItem(s);
                     break;
                }
            
                       
                   
            }
                break;
            case 3: 
                for(i=0; i<PlayerFrame.objectCard3.size(); i++ ){

                    
                if(PlayerFrame.objectCard3.get(i).getName()==s)
                {
                                      a+=PlayerFrame.objectCard3.get(i).getAttackBonus();
                                            t+=PlayerFrame.objectCard3.get(i).getAttackBonus();

                     PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.remove(i));
                     PlayerFrame.Cardcombobox3.removeItem(s);
                     break;
                }
            
                       
               
                   
            }
                break;
            case 4:  
                for(i=0; i<PlayerFrame.objectCard4.size(); i++ ){

                    
                if(PlayerFrame.objectCard4.get(i).getName()==s)
                {
                                          a+=PlayerFrame.objectCard4.get(i).getAttackBonus();
                                         t+=PlayerFrame.objectCard4.get(i).getAttackBonus();

                     PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.remove(i));
                     PlayerFrame.Cardcombobox4.removeItem(s);
                     break;
                     
                }
            
                       
                   
            }
                break;
            case 5:  
                for(i=0; i<PlayerFrame.objectCard5.size(); i++ ){

                    
                if(PlayerFrame.objectCard5.get(i).getName()==s)
                {
                                          a+=PlayerFrame.objectCard5.get(i).getAttackBonus();
                                         t+=PlayerFrame.objectCard5.get(i).getAttackBonus();

                     PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.remove(i));
                     PlayerFrame.Cardcombobox5.removeItem(s);
                     break;
                }
            
                       
                   
            }
                break;
            case 6: 
                for(i=0; i<PlayerFrame.objectCard6.size(); i++ ){

                    
                if(PlayerFrame.objectCard6.get(i).getName()==s)
                {
                                         a+=PlayerFrame.objectCard6.get(i).getAttackBonus();
                                         t+=PlayerFrame.objectCard6.get(i).getAttackBonus();
                     PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.remove(i));
                     PlayerFrame.Cardcombobox6.removeItem(s);
                     break;
                }
            
                       
                   
            }
                break;
        }
 
 
 
        bonusLabel1.setText(Integer.toString(a));
        totalLabel1.setText(Integer.toString(t));
 
       }
       else
                                                    JOptionPane.showMessageDialog(rootPane, "Enough bonus cards for today -.- ", "Stop it! ", WIDTH);


    }//GEN-LAST:event_useBonusButton1ActionPerformed

    private void chooseButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseButton2ActionPerformed
ImageIcon  icon = new javax.swing.ImageIcon(getClass().getResource("/org/me/pokemongame/pokemon-tapes/"+pokemonComboBox2.getSelectedItem()+".png"));
        
        iconLabel2.setIcon(icon); 
        for(int i=0; i<PlayerFrame.caughtPokemon.size(); i++){
            if(pokemonComboBox2.getSelectedItem()==PlayerFrame.caughtPokemon.get(i).getName()){
               attackLabel2.setText(Integer.toString(PlayerFrame.caughtPokemon.get(i).getAttack()));
               t2+=PlayerFrame.caughtPokemon.get(i).getAttack();
               totalLabel2.setText(Integer.toString(t2));
               chooseButton2.setEnabled(false);
            }
                
        }        // TODO add your handling code here:
    }//GEN-LAST:event_chooseButton2ActionPerformed

    private void useBonusButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useBonusButton2ActionPerformed
m2++;
       if(m2<=2){
       String s=(String) bonusComboBox2.getSelectedItem();
        bonusComboBox2.removeItem(s);
       
        int i=0;
        switch(battleWithPlayer){
            case 1: 
                
                for(i=0; i<PlayerFrame.objectCard1.size(); i++ ){

                    
                if(PlayerFrame.objectCard1.get(i).getName()==s)
                {
                                                         a2+=PlayerFrame.objectCard1.get(i).getAttackBonus();
                                         t2+=PlayerFrame.objectCard1.get(i).getAttackBonus();

                     PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.remove(i));
                     PlayerFrame.Cardcombobox2.removeItem(s);
                     break;
                }
            
                       
                   
            }

                
                break;
            case 2:   
                for(i=0; i<PlayerFrame.objectCard2.size(); i++ ){

                    
                if(PlayerFrame.objectCard2.get(i).getName()==s)
                {
                                         a2+=PlayerFrame.objectCard2.get(i).getAttackBonus();
                                         t2+=PlayerFrame.objectCard2.get(i).getAttackBonus();

                     PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.remove(i));
                     PlayerFrame.Cardcombobox2.removeItem(s);
                     break;
                }
            
                       
                   
            }
                break;
            case 3: 
                for(i=0; i<PlayerFrame.objectCard3.size(); i++ ){

                    
                if(PlayerFrame.objectCard3.get(i).getName()==s)
                {
                                      a2+=PlayerFrame.objectCard3.get(i).getAttackBonus();
                                            t2+=PlayerFrame.objectCard3.get(i).getAttackBonus();

                     PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.remove(i));
                     PlayerFrame.Cardcombobox3.removeItem(s);
                     break;
                }
            
                       
               
                   
            }
                break;
            case 4:  
                for(i=0; i<PlayerFrame.objectCard4.size(); i++ ){

                    
                if(PlayerFrame.objectCard4.get(i).getName()==s)
                {
                                          a2+=PlayerFrame.objectCard4.get(i).getAttackBonus();
                                         t2+=PlayerFrame.objectCard4.get(i).getAttackBonus();

                     PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.remove(i));
                     PlayerFrame.Cardcombobox4.removeItem(s);
                     break;
                     
                }
            
                       
                   
            }
                break;
            case 5:  
                for(i=0; i<PlayerFrame.objectCard5.size(); i++ ){

                    
                if(PlayerFrame.objectCard5.get(i).getName()==s)
                {
                                          a2+=PlayerFrame.objectCard5.get(i).getAttackBonus();
                                         t2+=PlayerFrame.objectCard5.get(i).getAttackBonus();

                     PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.remove(i));
                     PlayerFrame.Cardcombobox5.removeItem(s);
                     break;
                }
            
                       
                   
            }
                break;
            case 6: 
                for(i=0; i<PlayerFrame.objectCard6.size(); i++ ){

                    
                if(PlayerFrame.objectCard6.get(i).getName()==s)
                {
                                         a2+=PlayerFrame.objectCard6.get(i).getAttackBonus();
                                         t2+=PlayerFrame.objectCard6.get(i).getAttackBonus();
                     PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.remove(i));
                     PlayerFrame.Cardcombobox6.removeItem(s);
                     break;
                }
            
                       
                   
            }
                break;
        }
 
 
 
        bonusLabel2.setText(Integer.toString(a2));
        totalLabel2.setText(Integer.toString(t2));
 
       }
       else
                                                    JOptionPane.showMessageDialog(rootPane, "Enough bonus cards for today -.- ", "Stop it! ", WIDTH);


                                                    // TODO add your handling code here:
    }//GEN-LAST:event_useBonusButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
if(t>t2)
{
    if(battleWithPlayer==7)
    {
                                                                JOptionPane.showMessageDialog(rootPane, "You have become a Pokemon Master!!! The Game has ended.", "CONGRATULATIONS!!!! ", WIDTH);
totalLabel1.setText(null);
attackLabel1.setText(null);
rollLabel1.setText(null);
bonusLabel1.setText(null);
totalLabel2.setText(null);
attackLabel2.setText(null);
rollLabel2.setText(null);
bonusLabel2.setText(null);
m=0;
a=0;
t=0;
m2=0;
a2=0;
t2=0;
    dispose();
    }
    else{
    
                                                        JOptionPane.showMessageDialog(rootPane, "Player "+playerNumber+" has won!", "CONGRATULATIONS!!!! ", WIDTH);
switch(battleWithPlayer){
    case 1: for(int i=0; i<PlayerFrame.caughtPokemon1.size(); i++){
        
    
        if(this.pokemonComboBox2.getSelectedItem()==PlayerFrame.caughtPokemon1.get(i).getName())
            PlayerFrame.caughtPokemon1.get(i).setAlive(false);
       
       
}
    
     if(PlayerFrame.objectCard1.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard1.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(playerNumber==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                                                                                       }
                                                                                        else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard1.size()==2)
        {
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard1.size()>2)
        {
            if(playerNumber==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }
            }
            else if(playerNumber==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }
        }
                else if(playerNumber==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                
                
        }
    
    
    break;
         case 2: for(int i=0; i<PlayerFrame.caughtPokemon2.size(); i++){
        
    
        if(this.pokemonComboBox2.getSelectedItem()==PlayerFrame.caughtPokemon2.get(i).getName())
            PlayerFrame.caughtPokemon2.get(i).setAlive(false);
}
         if(PlayerFrame.objectCard2.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard2.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(playerNumber==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                                                                                       }
                                                                                        else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard2.size()==2)
        {
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard2.size()>2)
        {
            if(playerNumber==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }
            }
            else if(playerNumber==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }
        }
                else if(playerNumber==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                
                
        }

         
    break;
              case 3: for(int i=0; i<PlayerFrame.caughtPokemon3.size(); i++){
        
    
        if(this.pokemonComboBox2.getSelectedItem()==PlayerFrame.caughtPokemon3.get(i).getName())
            PlayerFrame.caughtPokemon3.get(i).setAlive(false);
}
              
              
              if(PlayerFrame.objectCard3.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard3.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(playerNumber==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                                                                                       }
                                                                                        else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard3.size()==2)
        {
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard3.size()>2)
        {
            if(playerNumber==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }
            }
            else if(playerNumber==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }
        }
                else if(playerNumber==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                
                
        }

              
    break;
                   
                   
                   
                   
                   

                        case 4: for(int i=0; i<PlayerFrame.caughtPokemon4.size(); i++){
        
    
        if(this.pokemonComboBox2.getSelectedItem()==PlayerFrame.caughtPokemon4.get(i).getName())
            PlayerFrame.caughtPokemon4.get(i).setAlive(false);
}
                        
                        
                        if(PlayerFrame.objectCard4.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard4.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(playerNumber==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                                                                                       }
                                                                                        else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard4.size()==2)
        {
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard4.size()>2)
        {
            if(playerNumber==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }
            }
            else if(playerNumber==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }
        }
                else if(playerNumber==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                
                
        }

                        
                        
    break;
                             case 5: for(int i=0; i<PlayerFrame.caughtPokemon5.size(); i++){
        
    
        if(this.pokemonComboBox2.getSelectedItem()==PlayerFrame.caughtPokemon5.get(i).getName())
            PlayerFrame.caughtPokemon5.get(i).setAlive(false);
}
                             
                    if(PlayerFrame.objectCard5.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard5.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(playerNumber==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                                                                                       }
                                                                                        else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard5.size()==2)
        {
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard5.size()>2)
        {
            if(playerNumber==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }
            }
            else if(playerNumber==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }
        }
                else if(playerNumber==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                
                
        }
         
                             
                             
    break;

case 6: for(int i=0; i<PlayerFrame.caughtPokemon6.size(); i++){
        
    
        if(this.pokemonComboBox2.getSelectedItem()==PlayerFrame.caughtPokemon6.get(i).getName())
            PlayerFrame.caughtPokemon6.get(i).setAlive(false);
}



if(PlayerFrame.objectCard6.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard6.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(playerNumber==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                                                                                       }
                                                                                        else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard6.size()==2)
        {
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
            if(playerNumber==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
            }
            else if(playerNumber==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(playerNumber==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard6.size()>2)
        {
            if(playerNumber==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }
            }
            else if(playerNumber==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }
        }
                else if(playerNumber==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                else if(playerNumber==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                
                
        }




            break;
    

}





totalLabel1.setText(null);
attackLabel1.setText(null);
rollLabel1.setText(null);
bonusLabel1.setText(null);
totalLabel2.setText(null);
attackLabel2.setText(null);
rollLabel2.setText(null);
bonusLabel2.setText(null);
m=0;
a=0;
t=0;
m2=0;
a2=0;
t2=0;
dispose();

}}
else if(t2>t){
    if(battleWithPlayer==7)
    {
                                                                JOptionPane.showMessageDialog(rootPane, "Master Trainer has won!", "Sorry!!!! ", WIDTH);
    }
                                                                else{
    
    
                                                        JOptionPane.showMessageDialog(rootPane, "Player "+battleWithPlayer+" has won!", "CONGRATULATIONS!!!! ", WIDTH);
    }

    
switch(playerNumber){
    case 1: for(int i=0; i<PlayerFrame.caughtPokemon1.size(); i++){
        
    
        if(this.pokemonComboBox1.getSelectedItem()==PlayerFrame.caughtPokemon1.get(i).getName())
            PlayerFrame.caughtPokemon1.get(i).setAlive(false);
}
    
    if(PlayerFrame.objectCard1.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard1.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(battleWithPlayer==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                                                                                       }
                                                                                        else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard1.size()==2)
        {
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(0).getName());
                            PlayerFrame.objectCard1.remove(0);
                           PlayerFrame.Cardcombobox1.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard1.size()>2)
        {
            if(battleWithPlayer==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }
            }
            else if(battleWithPlayer==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }
        }
                else if(battleWithPlayer==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard1.size());
                        Card  c = PlayerFrame.objectCard1.get(index);
                        for(int i=0;i<PlayerFrame.objectCard1.size();i++){
                       if(PlayerFrame.objectCard1.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(i).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(i).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard1.size());
                        Card  cc = PlayerFrame.objectCard1.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard1.size();j++){
                       if(PlayerFrame.objectCard1.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard1.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard1.get(j).getName());
                           PlayerFrame.Cardcombobox1.removeItem(PlayerFrame.objectCard1.get(j).getName());
                                                       PlayerFrame.objectCard1.remove(PlayerFrame.objectCard1.get(j));
break;
                       }
                        }

                }
                
                
        }

    
    
    
    break;
         case 2: for(int i=0; i<PlayerFrame.caughtPokemon2.size(); i++){
        
    
        if(this.pokemonComboBox1.getSelectedItem()==PlayerFrame.caughtPokemon2.get(i).getName())
            PlayerFrame.caughtPokemon2.get(i).setAlive(false);
}
         
         
         
         if(PlayerFrame.objectCard2.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard2.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(battleWithPlayer==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                                                                                       }
                                                                                        else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard2.size()==2)
        {
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(0).getName());
                            PlayerFrame.objectCard2.remove(0);
                           PlayerFrame.Cardcombobox2.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard2.size()>2)
        {
            if(battleWithPlayer==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }
            }
            else if(battleWithPlayer==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }
        }
                else if(battleWithPlayer==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard2.size());
                        Card  c = PlayerFrame.objectCard2.get(index);
                        for(int i=0;i<PlayerFrame.objectCard2.size();i++){
                       if(PlayerFrame.objectCard2.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(i).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(i).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard2.size());
                        Card  cc = PlayerFrame.objectCard2.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard2.size();j++){
                       if(PlayerFrame.objectCard2.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard2.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard2.get(j).getName());
                           PlayerFrame.Cardcombobox2.removeItem(PlayerFrame.objectCard2.get(j).getName());
                                                       PlayerFrame.objectCard2.remove(PlayerFrame.objectCard2.get(j));
break;
                       }
                        }

                }
                
                
        }

         
    break;
              case 3: for(int i=0; i<PlayerFrame.caughtPokemon3.size(); i++){
        
    
        if(this.pokemonComboBox1.getSelectedItem()==PlayerFrame.caughtPokemon3.get(i).getName())
            PlayerFrame.caughtPokemon3.get(i).setAlive(false);
}
              
              
              if(PlayerFrame.objectCard3.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard3.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(battleWithPlayer==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                                                                                       }
                                                                                        else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard3.size()==2)
        {
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(0).getName());
                            PlayerFrame.objectCard3.remove(0);
                           PlayerFrame.Cardcombobox3.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard3.size()>2)
        {
            if(battleWithPlayer==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }
            }
            else if(battleWithPlayer==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }
        }
                else if(battleWithPlayer==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard3.size());
                        Card  c = PlayerFrame.objectCard3.get(index);
                        for(int i=0;i<PlayerFrame.objectCard3.size();i++){
                       if(PlayerFrame.objectCard3.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(i).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(i).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard3.size());
                        Card  cc = PlayerFrame.objectCard3.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard3.size();j++){
                       if(PlayerFrame.objectCard3.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard3.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard3.get(j).getName());
                           PlayerFrame.Cardcombobox3.removeItem(PlayerFrame.objectCard3.get(j).getName());
                                                       PlayerFrame.objectCard3.remove(PlayerFrame.objectCard3.get(j));
break;
                       }
                        }

                }
                
                
        }

              
              
    break;
                   
                        case 4: for(int i=0; i<PlayerFrame.caughtPokemon4.size(); i++){
        
    
        if(this.pokemonComboBox1.getSelectedItem()==PlayerFrame.caughtPokemon4.get(i).getName())
            PlayerFrame.caughtPokemon4.get(i).setAlive(false);
}
                        
                        
                        if(PlayerFrame.objectCard4.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard4.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(battleWithPlayer==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                                                                                       }
                                                                                        else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard4.size()==2)
        {
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(0).getName());
                            PlayerFrame.objectCard4.remove(0);
                           PlayerFrame.Cardcombobox4.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard4.size()>2)
        {
            if(battleWithPlayer==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }
            }
            else if(battleWithPlayer==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }
        }
                else if(battleWithPlayer==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard4.size());
                        Card  c = PlayerFrame.objectCard4.get(index);
                        for(int i=0;i<PlayerFrame.objectCard4.size();i++){
                       if(PlayerFrame.objectCard4.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(i).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(i).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard4.size());
                        Card  cc = PlayerFrame.objectCard4.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard4.size();j++){
                       if(PlayerFrame.objectCard4.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard4.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard4.get(j).getName());
                           PlayerFrame.Cardcombobox4.removeItem(PlayerFrame.objectCard4.get(j).getName());
                                                       PlayerFrame.objectCard4.remove(PlayerFrame.objectCard4.get(j));
break;
                       }
                        }

                }
                
                
        }

                        
                        
    break;
                             case 5: for(int i=0; i<PlayerFrame.caughtPokemon5.size(); i++){
        
    
        if(this.pokemonComboBox1.getSelectedItem()==PlayerFrame.caughtPokemon5.get(i).getName())
            PlayerFrame.caughtPokemon5.get(i).setAlive(false);
}
                             
                             
                             if(PlayerFrame.objectCard5.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard5.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(battleWithPlayer==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                                                                                       }
                                                                                        else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard5.size()==2)
        {
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(0).getName());
                            PlayerFrame.objectCard5.remove(0);
                           PlayerFrame.Cardcombobox5.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard5.size()>2)
        {
            if(battleWithPlayer==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }
            }
            else if(battleWithPlayer==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }
        }
                else if(battleWithPlayer==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard5.size());
                        Card  c = PlayerFrame.objectCard5.get(index);
                        for(int i=0;i<PlayerFrame.objectCard5.size();i++){
                       if(PlayerFrame.objectCard5.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(i).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(i).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard5.size());
                        Card  cc = PlayerFrame.objectCard5.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard5.size();j++){
                       if(PlayerFrame.objectCard5.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard5.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard5.get(j).getName());
                           PlayerFrame.Cardcombobox5.removeItem(PlayerFrame.objectCard5.get(j).getName());
                                                       PlayerFrame.objectCard5.remove(PlayerFrame.objectCard5.get(j));
break;
                       }
                        }

                }
                
                
        }

                             
    break;
                                 case 6: for(int i=0; i<PlayerFrame.caughtPokemon6.size(); i++){
        
    
        if(this.pokemonComboBox1.getSelectedItem()==PlayerFrame.caughtPokemon6.get(i).getName())
            PlayerFrame.caughtPokemon6.get(i).setAlive(false);
}
                                 
                                 if(PlayerFrame.objectCard6.isEmpty())
        {
                                                                    JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 2 object cards!", "CONGRATULATIONS!!!! ", WIDTH);

        }
        else if(PlayerFrame.objectCard6.size()==1)
                {
                                                                                        JOptionPane.showMessageDialog(rootPane, "Hey you, winner! Draw 1 object card!", "CONGRATULATIONS!!!! ", WIDTH);

                                                                                       if(battleWithPlayer==1)
                                                                                       {
                                                                                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                                                                                       }
                                                                                        else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           


                }
        else if(PlayerFrame.objectCard6.size()==2)
        {
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
            if(battleWithPlayer==1)
            {
                PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
            }
            else if(battleWithPlayer==2)                      {                                       
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==3)
                           {
                               PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==4)
                           {
                               PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==5)
                           {
                               PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
                           else if(battleWithPlayer==6)
                           {
                               PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(0));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(0).getName());
                            PlayerFrame.objectCard6.remove(0);
                           PlayerFrame.Cardcombobox6.removeAllItems();
                           }
        }
     
        else if(PlayerFrame.objectCard6.size()>2)
        {
            if(battleWithPlayer==1)
            {
                Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard1.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox1.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }
            }
            else if(battleWithPlayer==2){
        Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard2.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox2.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }
        }
                else if(battleWithPlayer==3)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard3.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox3.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==4)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard4.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox4.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==5)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard5.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox5.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                else if(battleWithPlayer==6)
                {
                    Random r=new Random();
        int index=0;
                 index = r.nextInt(PlayerFrame.objectCard6.size());
                        Card  c = PlayerFrame.objectCard6.get(index);
                        for(int i=0;i<PlayerFrame.objectCard6.size();i++){
                       if(PlayerFrame.objectCard6.get(i).getName()==c.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(i));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(i).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(i).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(i));
break;
                       }
                        }
                        
                        
                                                                                                   
        Random rr=new Random();
        int indexx=0;
                 indexx = rr.nextInt(PlayerFrame.objectCard6.size());
                        Card  cc = PlayerFrame.objectCard6.get(indexx);
                        for(int j=0;j<PlayerFrame.objectCard6.size();j++){
                       if(PlayerFrame.objectCard6.get(j).getName()==cc.getName()){
                           PlayerFrame.objectCard6.add(PlayerFrame.objectCard6.get(j));
                           PlayerFrame.Cardcombobox6.addItem(PlayerFrame.objectCard6.get(j).getName());
                           PlayerFrame.Cardcombobox6.removeItem(PlayerFrame.objectCard6.get(j).getName());
                                                       PlayerFrame.objectCard6.remove(PlayerFrame.objectCard6.get(j));
break;
                       }
                        }

                }
                
                
        }

                                 
    break;
}

        
    
totalLabel1.setText(null);
attackLabel1.setText(null);
rollLabel1.setText(null);
bonusLabel1.setText(null);
totalLabel2.setText(null);
attackLabel2.setText(null);
rollLabel2.setText(null);
bonusLabel2.setText(null);
m=0;
a=0;
t=0;
m2=0;
a2=0;
t2=0;
    dispose();

}
 else
{
                                                            JOptionPane.showMessageDialog(rootPane, "Please roll again!", "Draw!!!! ", WIDTH);
rollLabel1.setText(null);
rollLabel2.setText(null);



}

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rollmasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rollmasterActionPerformed

Random diceRoller = new Random();
       int roll = diceRoller.nextInt(6) + 1;
 
 String zaria = Integer.toString(roll);
rollLabel2.setText(zaria); 


boolean timeFlag1=false;
 for(int i=0; i<objectCard1.size(); i++){
    if(objectCard1.get(i).getName()=="TimeMachine"){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Would you like to use your TimeMachine Card??");
if(dialogResult == JOptionPane.YES_OPTION){
    objectCard1.remove(i);
    Cardcombobox1.removeItem("TimeMachine");
    JOptionPane.showMessageDialog(rootPane, "TimeMachine card has been used. Please roll again!", null, WIDTH);
    timeFlag1=true;
}
       
}
    }

for(int i=0; i<objectCard2.size(); i++){
    if(objectCard2.get(i).getName()=="TimeMachine"){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Will Player 2 use his TimeMachine Card??");
if(dialogResult == JOptionPane.YES_OPTION){
    objectCard2.remove(i);
    Cardcombobox2.removeItem("TimeMachine");
    JOptionPane.showMessageDialog(rootPane, "TimeMachine card has been used. Please roll again!", null, WIDTH);
        timeFlag1=true;

}
       
}
    }
if(numberOfPlayers>=3){
for(int i=0; i<objectCard3.size(); i++){
    if(objectCard3.get(i).getName()=="TimeMachine"){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Will Player 3 use his TimeMachine Card??");
if(dialogResult == JOptionPane.YES_OPTION){
    objectCard3.remove(i);
    Cardcombobox3.removeItem("TimeMachine");
    JOptionPane.showMessageDialog(rootPane, "TimeMachine card has been used. Please roll again!", null, WIDTH);
        timeFlag1=true;

}
       
}
    }}

if(numberOfPlayers>=4){
for(int i=0; i<objectCard4.size(); i++){
    if(objectCard4.get(i).getName()=="TimeMachine"){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Will Player 4 use his TimeMachine Card??");
if(dialogResult == JOptionPane.YES_OPTION){
    objectCard4.remove(i);
    Cardcombobox4.removeItem("TimeMachine");
    JOptionPane.showMessageDialog(rootPane, "TimeMachine card has been used. Please roll again!", null, WIDTH);
        timeFlag1=true;

}
       
}
    }}

if(numberOfPlayers>=5){
for(int i=0; i<objectCard5.size(); i++){
    if(objectCard5.get(i).getName()=="TimeMachine"){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Will Player 5 use his TimeMachine Card??");
if(dialogResult == JOptionPane.YES_OPTION){
    objectCard5.remove(i);
    Cardcombobox5.removeItem("TimeMachine");
    JOptionPane.showMessageDialog(rootPane, "TimeMachine card has been used. Please roll again!", null, WIDTH);
        timeFlag1=true;

}
       
}
    }}

if(numberOfPlayers>=6){
for(int i=0; i<objectCard6.size(); i++){
    if(objectCard6.get(i).getName()=="TimeMachine"){
        int dialogResult = JOptionPane.showConfirmDialog(this, "Will Player 6 use his TimeMachine Card??");
if(dialogResult == JOptionPane.YES_OPTION){
    objectCard6.remove(i);
    Cardcombobox6.removeItem("TimeMachine");
    JOptionPane.showMessageDialog(rootPane, "TimeMachine card has been used. Please roll again!", null, WIDTH);
        timeFlag1=true;

}
       
}
    }}
 
 if(!timeFlag1)
 {
     BattleFrame.setRollLabel2(zaria);        

     if(roll==1||roll==6)
     {
         bonusLabel2.setText("6");
         t2+=6;
         totalLabel2.setText(Integer.toString(t2));
     }
 if(roll==2||roll==4)
     {
         bonusLabel2.setText("7");
          t2+=7;
         totalLabel2.setText(Integer.toString(t2));
     }
 if(roll==3||roll==5)
     {
         bonusLabel2.setText("8");
          t2+=8;
         totalLabel2.setText(Integer.toString(t2));
     }
 }

// TODO add your handling code here:
    }//GEN-LAST:event_rollmasterActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attackLabel1;
    private javax.swing.JLabel attackLabel2;
    private javax.swing.JComboBox bonusComboBox1;
    private javax.swing.JComboBox bonusComboBox2;
    private javax.swing.JLabel bonusLabel1;
    private javax.swing.JLabel bonusLabel2;
    private javax.swing.JButton chooseButton1;
    private javax.swing.JButton chooseButton2;
    private javax.swing.JLabel iconLabel1;
    private javax.swing.JLabel iconLabel2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JLabel masterLabel;
    private javax.swing.JComboBox pokemonComboBox1;
    private javax.swing.JComboBox pokemonComboBox2;
    public static javax.swing.JLabel rollLabel1;
    public static javax.swing.JLabel rollLabel2;
    private javax.swing.JButton rollmaster;
    public static javax.swing.JLabel totalLabel1;
    public static javax.swing.JLabel totalLabel2;
    private javax.swing.JButton useBonusButton1;
    private javax.swing.JButton useBonusButton2;
    // End of variables declaration//GEN-END:variables

    private void myinitComponents() {
        
        
totalLabel1.setText("0");
attackLabel1.setText("0");
rollLabel1.setText("0");
bonusLabel1.setText("0");
totalLabel2.setText("0");
attackLabel2.setText("0");
rollLabel2.setText("0");
bonusLabel2.setText("0");
m=0;
a=0;
t=0;
m2=0;
a2=0;
t2=0;
        
        rollmaster.setVisible(false);
        jLabel2.setVisible(false);
        
        if(battleWithPlayer==7)
        {
            jLabel21.setVisible(false);
            jLabel22.setVisible(false);
            pokemonComboBox2.setVisible(false);
            bonusComboBox2.setVisible(false);
            chooseButton2.setVisible(false);
            useBonusButton2.setVisible(false);
            
            rollmaster.setVisible(true);
        jLabel2.setVisible(true);
        masterLabel.setVisible(true);
        Random r=new Random();
        int index=0;
        
        ImageIcon icon=null;
        
        index = r.nextInt(RivalCard.rivalArray.size());
         RivalCard rc = RivalCard.rivalArray.get(index);
         icon = new javax.swing.ImageIcon(getClass().getResource("/org/me/pokemongame/pokemon-kartes/"+rc.getName()+".png"));
        iconLabel2.setIcon(icon);
        
        
        attackLabel2.setText(Integer.toString(rc.getAttackStrength()));
        t2+=rc.getAttackStrength();
        totalLabel2.setText(Integer.toString(t2));
        
                masterLabel.setText(rc.getName());

            
        }
        
        
        
        
 Toolkit tk = Toolkit.getDefaultToolkit();
    Dimension d = tk.getScreenSize();
    Insets scnMax = Toolkit.getDefaultToolkit().getScreenInsets(getGraphicsConfiguration());
int taskBarSize = scnMax.bottom;
    this.setBounds(0, 0, 1000, d.height-taskBarSize);
    
    pokemonComboBox1.removeAllItems();
        bonusComboBox1.removeAllItems();
         pokemonComboBox2.removeAllItems();
        bonusComboBox2.removeAllItems();
        
        
        
        
        switch(playerNumber){
            case 1:  for(int j=0; j<PlayerFrame.caughtPokemon1.size(); j++){
            if(PlayerFrame.caughtPokemon1.get(j).isAlive())
            pokemonComboBox1.addItem(PlayerFrame.caughtPokemon1.get(j).getName());
            
           
            }
            
            for(int i=0; i<PlayerFrame.objectCard1.size(); i++){
                if(PlayerFrame.objectCard1.get(i).getAttackBonus()>0){
                    
                   bonusComboBox1.addItem(PlayerFrame.objectCard1.get(i).getName());
                    
                }
            }
            break;
            
        
            case 2:  for(int j=0; j<PlayerFrame.caughtPokemon2.size(); j++){
            if(PlayerFrame.caughtPokemon2.get(j).isAlive())
            pokemonComboBox1.addItem(PlayerFrame.caughtPokemon2.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard2.size(); i++){
                if(PlayerFrame.objectCard2.get(i).getAttackBonus()>0){
                    
                   bonusComboBox1.addItem(PlayerFrame.objectCard2.get(i).getName());
                    
                }
            }
              break;
            
        
            case 3:  for(int j=0; j<PlayerFrame.caughtPokemon3.size(); j++){
            if(PlayerFrame.caughtPokemon3.get(j).isAlive())
            pokemonComboBox1.addItem(PlayerFrame.caughtPokemon3.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard3.size(); i++){
                if(PlayerFrame.objectCard3.get(i).getAttackBonus()>0){
                    
                   bonusComboBox1.addItem(PlayerFrame.objectCard3.get(i).getName());
                    
                }
            }
              break;
            
        
            case 4:
             for(int j=0; j<PlayerFrame.caughtPokemon4.size(); j++){
            if(PlayerFrame.caughtPokemon4.get(j).isAlive())
            pokemonComboBox1.addItem(PlayerFrame.caughtPokemon4.get(j).getName());
             }
             for(int i=0; i<PlayerFrame.objectCard4.size(); i++){
                if(PlayerFrame.objectCard4.get(i).getAttackBonus()>0){
                    
                   bonusComboBox1.addItem(PlayerFrame.objectCard4.get(i).getName());
                    
                }
            }
              break;
            
        
            case 5:  for(int j=0; j<PlayerFrame.caughtPokemon5.size(); j++){
            if(PlayerFrame.caughtPokemon5.get(j).isAlive())
            pokemonComboBox1.addItem(PlayerFrame.caughtPokemon5.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard5.size(); i++){
                if(PlayerFrame.objectCard5.get(i).getAttackBonus()>0){
                    
                   bonusComboBox1.addItem(PlayerFrame.objectCard5.get(i).getName());
                    
                }
            }
              break;
            
        
            case 6:  for(int j=0; j<PlayerFrame.caughtPokemon6.size(); j++){
            if(PlayerFrame.caughtPokemon6.get(j).isAlive())
            pokemonComboBox1.addItem(PlayerFrame.caughtPokemon6.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard6.size(); i++){
                if(PlayerFrame.objectCard6.get(i).getAttackBonus()>0){
                    
                   bonusComboBox1.addItem(PlayerFrame.objectCard6.get(i).getName());
                    
                }
            }
              break;
            
        
        }
        
        switch(battleWithPlayer){
            case 1:  for(int j=0; j<PlayerFrame.caughtPokemon1.size(); j++){
            if(PlayerFrame.caughtPokemon1.get(j).isAlive())
            pokemonComboBox2.addItem(PlayerFrame.caughtPokemon1.get(j).getName());
            
           
            }
            
            for(int i=0; i<PlayerFrame.objectCard1.size(); i++){
                if(PlayerFrame.objectCard1.get(i).getAttackBonus()>0){
                    
                   bonusComboBox2.addItem(PlayerFrame.objectCard1.get(i).getName());
                    
                }
            }
            break;
            
        
            case 2:  for(int j=0; j<PlayerFrame.caughtPokemon2.size(); j++){
            if(PlayerFrame.caughtPokemon2.get(j).isAlive())
            pokemonComboBox2.addItem(PlayerFrame.caughtPokemon2.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard2.size(); i++){
                if(PlayerFrame.objectCard2.get(i).getAttackBonus()>0){
                    
                   bonusComboBox2.addItem(PlayerFrame.objectCard2.get(i).getName());
                    
                }
            }
              break;
            
        
            case 3:  for(int j=0; j<PlayerFrame.caughtPokemon3.size(); j++){
            if(PlayerFrame.caughtPokemon3.get(j).isAlive())
            pokemonComboBox2.addItem(PlayerFrame.caughtPokemon3.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard3.size(); i++){
                if(PlayerFrame.objectCard3.get(i).getAttackBonus()>0){
                    
                   bonusComboBox2.addItem(PlayerFrame.objectCard3.get(i).getName());
                    
                }
            }
              break;
            
        
            case 4:
             for(int j=0; j<PlayerFrame.caughtPokemon4.size(); j++){
            if(PlayerFrame.caughtPokemon4.get(j).isAlive())
            pokemonComboBox2.addItem(PlayerFrame.caughtPokemon4.get(j).getName());
             }
             for(int i=0; i<PlayerFrame.objectCard4.size(); i++){
                if(PlayerFrame.objectCard4.get(i).getAttackBonus()>0){
                    
                   bonusComboBox2.addItem(PlayerFrame.objectCard4.get(i).getName());
                    
                }
            }
              break;
            
        
            case 5:  for(int j=0; j<PlayerFrame.caughtPokemon5.size(); j++){
            if(PlayerFrame.caughtPokemon5.get(j).isAlive())
            pokemonComboBox2.addItem(PlayerFrame.caughtPokemon5.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard5.size(); i++){
                if(PlayerFrame.objectCard5.get(i).getAttackBonus()>0){
                    
                   bonusComboBox2.addItem(PlayerFrame.objectCard5.get(i).getName());
                    
                }
            }
              break;
            
        
            case 6:  for(int j=0; j<PlayerFrame.caughtPokemon6.size(); j++){
            if(PlayerFrame.caughtPokemon6.get(j).isAlive())
            pokemonComboBox2.addItem(PlayerFrame.caughtPokemon6.get(j).getName());
            }
            for(int i=0; i<PlayerFrame.objectCard6.size(); i++){
                if(PlayerFrame.objectCard6.get(i).getAttackBonus()>0){
                    
                   bonusComboBox2.addItem(PlayerFrame.objectCard6.get(i).getName());
                    
                }
            }
              break;
            
        
        }

    
    }
}
